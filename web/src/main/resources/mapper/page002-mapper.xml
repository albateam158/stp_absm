<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stp.absm.mybatis.mapper.Page002Mapper">

    <resultMap id="BoardMap" type="com.stp.absm.model.AbsmMeasure">
        <id property="meId" column="me_id"/>
        <result property="caId" column="ca_id"/>
        <result property="prId" column="pr_id"/>
        <result property="egCd" column="eg_cd"/>
        <result property="meTm" column="me_tm"/>
        <result property="meVal" column="me_val"/>
        <result property="dt" column="dt"/>
        <result property="caseNm" column="case_nm"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="deleteDate" column="delete_date"/>

    </resultMap>

    <resultMap id="FilterMap" type="com.stp.absm.model.AbsmFilter">
        <id property="fiId" column="fi_id"/>
        <result property="caId" column="ca_id"/>
        <result property="prId" column="pr_id"/>
        <result property="seCd" column="se_cd"/>
        <result property="valCd" column="val_cd"/>
        <result property="meanRri" column="mean_rri"/>
        <result property="stdRri" column="std_rri"/>
        <result property="meanHrv" column="mean_hrv"/>
        <result property="stdHrv" column="std_hrv"/>
        <result property="rmssdd" column="rmssdd"/>
        <result property="pnn50" column="pnn50"/>
        <result property="lfhf" column="lfhf"/>
        <result property="scl" column="scl"/>
        <result property="surAvg" column="sur_avg"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="deleteDate" column="delete_date"/>
        <result property="caseNm" column="case_nm" />
        <result property="name" column="name" />
        <result property="chartId" column="chart_id" />
        <result property="chartData" column="chart_data" />
        <result property="pNo" column="p_no" />
    </resultMap>

    <resultMap id="ModelMap" type="com.stp.absm.model.AbsmModel">
        <id property="moId" column="mo_id"/>
        <result property="caId" column="ca_id"/>
        <result property="prId" column="pr_id"/>
        <result property="seCd" column="se_cd"/>
        <result property="meanRri" column="mean_rri"/>
        <result property="stdRri" column="std_rri"/>
        <result property="meanHrv" column="mean_hrv"/>
        <result property="stdHrv" column="std_hrv"/>
        <result property="rmssdd" column="rmssdd"/>
        <result property="pnn50" column="pnn50"/>
        <result property="lfhf" column="lfhf"/>
        <result property="scl" column="scl"/>
        <result property="surAvg" column="sur_avg"/>
        <result property="moPre1" column="mo_pre1"/>
        <result property="moPre2" column="mo_pre2"/>
        <result property="moPre3" column="mo_pre3"/>
        <result property="moPre4" column="mo_pre4"/>
        <result property="stLevel" column="st_level"/>
        <result property="dt" column="dt"/>
        <result property="caseNm" column="case_nm"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="deleteDate" column="delete_date"/>

    </resultMap>

    <resultMap id="OrgMap" type="com.stp.absm.model.AbsmOrg">
        <id property="orId" column="or_id"/>
        <result property="caId" column="ca_id"/>
        <result property="prId" column="pr_id"/>
        <result property="fiTm" column="fi_tm"/>
        <result property="meanRri" column="mean_rri"/>
        <result property="stdRri" column="std_rri"/>
        <result property="meanHrv" column="mean_hrv"/>
        <result property="stdHrv" column="std_hrv"/>
        <result property="rmssdd" column="rmssdd"/>
        <result property="pnn50" column="pnn50"/>
        <result property="lfhf" column="lfhf"/>
        <result property="scl" column="scl"/>
        <result property="dt" column="dt"/>
        <result property="caseNm" column="case_nm"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="deleteDate" column="delete_date"/>

    </resultMap>

    <!--========================================== SELECT ============================================== -->
    <sql id="selectBoardSql">
        select a.*
               ,b.dt
               ,b.case_nm
        from
        (
        SELECT (@row_number:=@row_number + 1) AS num, c.*
        FROM absm_measure AS c, (SELECT @row_number:=0) AS t
        WHERE 1=1
        AND c.pr_id = #{prId}
        ) a
        Inner JOIN absm_case b
        ON a.ca_id = b.ca_id
        AND b.ca_id = #{caId}
        order by num desc
    </sql>

    <select id="selectBoardsCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM (<include refid="selectBoardSql"></include>) a
    </select>


    <select id="selectBoards" parameterType="map" resultMap="BoardMap">
        <include refid="selectBoardSql"></include>
    </select>

    <insert id="createFilterValCd2" parameterType="com.stp.absm.model.AbsmFilter">
        insert into
        absm_filter
        (ca_id, pr_id, se_cd, val_cd, mean_rri, std_rri, mean_hrv, std_hrv, rmssdd, pnn50, lfhf, scl)
        SELECT ca_id, pr_id, se_cd, '2' val_cd
        , avg(a.mean_rri) mean_rri
        , avg(a.std_rri) std_rri
        , avg(a.mean_hrv) mean_hrv
        , avg(a.std_hrv) std_hrv
        , avg(a.rmssdd) rmssdd
        , avg(a.pnn50) pnn50
        , avg(a.lfhf) lfhf
        , avg(a.scl) scl
        FROM absm_filter a
        where val_cd = '1'
        and ca_id = #{caId}
        and pr_id = #{prId}
    </insert>

    <insert id="createFilterValCd3" parameterType="com.stp.absm.model.AbsmFilter">
        insert into
        absm_filter
        (ca_id, pr_id, se_cd, val_cd, mean_rri, std_rri, mean_hrv, std_hrv, rmssdd, pnn50, lfhf, scl)
        SELECT ca_id, pr_id, se_cd, '3' val_cd
        , stddev_samp(a.mean_rri) mean_rri
        , stddev_samp(a.std_rri) std_rri
        , stddev_samp(a.mean_hrv) mean_hrv
        , stddev_samp(a.std_hrv) std_hrv
        , stddev_samp(a.rmssdd) rmssdd
        , stddev_samp(a.pnn50) pnn50
        , stddev_samp(a.lfhf) lfhf
        , stddev_samp(a.scl) scl
        FROM absm_filter a
        where val_cd = '1'
        and ca_id = #{caId}
        and pr_id = #{prId}
    </insert>

    <insert id="createModel" parameterType="com.stp.absm.model.AbsmModel">
        insert into absm_model(
        ca_id, pr_id, se_cd, mean_rri, std_rri, mean_hrv, std_hrv, rmssdd, pnn50, lfhf, scl)
        select  DISTINCT a.ca_id, a.pr_id, a.se_cd
        , (a.mean_rri - b.mean_rri) / c.mean_rri mean_rri
        , (a.std_rri - b.std_rri) / c.std_rri std_rri
        , (a.mean_hrv - b.mean_hrv) / c.mean_hrv mean_hrv
        , (a.std_hrv - b.std_hrv) / c.std_hrv std_hrv
        , (a.rmssdd - b.rmssdd) / c.rmssdd rmssdd
        , (a.pnn50 - b.pnn50) / c.pnn50 pnn50
        , (a.lfhf - b.lfhf) / c.lfhf lfhf
        , (a.scl - b.scl) / c.scl scl
        FROM absm_filter a
        inner join absm_filter b
        on a.ca_id = b.ca_id
        and a.pr_id = b.pr_id
        and b.val_cd = '2'
        inner join absm_filter c
        on a.ca_id = c.ca_id
        and a.pr_id = c.pr_id
        and c.val_cd = '3'
        where a.val_cd = '1'
        and a.ca_id = #{caId}
        and a.pr_id = #{prId}
    </insert>

    <select id="selectModelResult" parameterType="map" resultMap="ModelMap">
        select a1.mo_id, a1.ca_id,a1.pr_id,a1.se_cd,a1.mo_pre1,a1.mo_pre2,a1.mo_pre3,a1.mo_pre4
        , a1.mean_rri
        , a1.std_rri
        , a1.mean_hrv
        , a1.std_hrv
        , a1.rmssdd
        , a1.pnn50
        , a1.lfhf
        , a1.scl
        , case when greatest(a1.mo_pre1,a1.mo_pre2,a1.mo_pre3,a1.mo_pre4) = a1.mo_pre1 then 1
             when greatest(a1.mo_pre1,a1.mo_pre2,a1.mo_pre3,a1.mo_pre4) = a1.mo_pre2 then 2
             when greatest(a1.mo_pre1,a1.mo_pre2,a1.mo_pre3,a1.mo_pre4) = a1.mo_pre3 then 3
             when greatest(a1.mo_pre1,a1.mo_pre2,a1.mo_pre3,a1.mo_pre4) = a1.mo_pre4 then 4
             end st_level
        from(
        select round(
            (1- exp(-exp(b.param1-(b.param4*a.std_rri + b.param5*a.mean_hrv + b.param6*a.pnn50 + b.param7*a.scl))))
          ,2) mo_pre1
        , round(
            (1- exp(-exp(b.param2-(b.param4*a.std_rri + b.param5*a.mean_hrv + b.param6*a.pnn50 + b.param7*a.scl))))
          - (1- exp(-exp(b.param1-(b.param4*a.std_rri + b.param5*a.mean_hrv + b.param6*a.pnn50 + b.param7*a.scl))))
          ,2) mo_pre2
        , round(
            (1- exp(-exp(b.param3-(b.param4*a.std_rri + b.param5*a.mean_hrv + b.param6*a.pnn50 + b.param7*a.scl))))
          - (1- exp(-exp(b.param2-(b.param4*a.std_rri + b.param5*a.mean_hrv + b.param6*a.pnn50 + b.param7*a.scl))))
          ,2) mo_pre3
        , round(
            (1-(1- exp(-exp(b.param3-(b.param4*a.std_rri + b.param5*a.mean_hrv + b.param6*a.pnn50 + b.param7*a.scl)))))
          ,2) mo_pre4
        , st_level, ca_id,pr_id,se_cd,a.mo_id
        , a.mean_rri
        , a.std_rri
        , a.mean_hrv
        , a.std_hrv
        , a.rmssdd
        , a.pnn50
        , a.lfhf
        , a.scl
        from absm_model a
        left outer join absm_mosu b
        on b.mo_cd = '1'
        where 1=1
        and a.ca_id = #{caId}
        and a.pr_id = #{prId}
        ) a1
    </select>


    <delete id="deleteMeasure" parameterType="map">
        delete from absm_measure
        where ca_id = #{caId}
        and pr_id = #{prId}
    </delete>

    <delete id="deletePrivate" parameterType="map">
        delete from absm_private
        where ca_id = #{caId}
    </delete>
    <delete id="deleteSurvey" parameterType="map">
        delete from absm_survey
        where ca_id = #{caId}
    </delete>

    <delete id="deleteSurveyAvg" parameterType="map">
        delete from absm_survey_avg
        where ca_id = #{caId}
    </delete>

    <delete id="deleteEvent" parameterType="map">
        delete from absm_event
        where ca_id = #{caId}
    </delete>

    <delete id="deleteOrg" parameterType="map">
        delete from absm_org
        where ca_id = #{caId}
        and pr_id = #{prId}
    </delete>

    <delete id="deleteFilter" parameterType="map">
        delete from absm_filter
        where ca_id = #{caId}
        and pr_id = #{prId}
    </delete>

    <delete id="deleteModel" parameterType="map">
        delete from absm_model
        where ca_id = #{caId}
        and pr_id = #{prId}
    </delete>
</mapper>