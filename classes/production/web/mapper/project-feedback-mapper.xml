<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xenix.wicrowd.mybatis.mapper.XProjectFeedbackMapper">

    <!--========================================== INSERT ============================================== -->

    <!--========================================== UPDATE ============================================== -->

    <!--========================================== DELETE ============================================== -->

    <!--========================================== SELECT ============================================== -->
    <select id="selectProjectFeedbacksCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
          FROM wi_project_feedback
         WHERE delete_date IS NULL
        <if test="keyword != null and keyword != ''">AND content LIKE CONCAT('%', #{keyword}, '%')</if>
    </select>

    <resultMap id="feedbackMap" type="net.xenix.wicrowd.model.XProjectFeedback">
        <id property="feedbackId" column="feedback_id"/>
        <result property="content" column="content"/>
        <result property="isSecret" column="is_secret"/>
        <result property="regDate" column="reg_date"/>
        <result property="deleteDate" column="delete_date"/>
        <result property="adminDeleteDate" column="admin_delete_date"/>

        <association property="user" javaType="net.xenix.wicrowd.model.XUser">
            <id property="userId" column="feedbackuser_id"/>
            <result property="name" column="feedbackuser_name" typeHandler="net.xenix.wicrowd.mybatis.EncryptStringTypeHandler"/>
            <result property="profileImageUrl" column="feedbackuser_profile_image_url"/>
            <result property="userType" column="user_type"/>
            <result property="invSortCd" column="inv_sort_cd" />
        </association>

        <collection property="comments" resultMap="commentMap" notNullColumn="comment_id"></collection>
    </resultMap>

    <resultMap id="commentMap" type="net.xenix.wicrowd.model.XFeedbackComment">

        <id property="commentId" column="comment_id"/>
        <result property="content" column="comment_content"/>
        <result property="regDate" column="comment_reg_date"/>
        <result property="deleteDate" column="comment_delete_date"/>
        <result property="adminDeleteDate" column="comment_admin_delete_date"/>

        <association property="user" javaType="net.xenix.wicrowd.model.XUser">
            <id property="userId" column="comment_user_id"/>
            <result property="name" column="commentuser_name" typeHandler="net.xenix.wicrowd.mybatis.EncryptStringTypeHandler"/>
            <result property="profileImageUrl" column="commentuser_profile_image_url"/>
            <result property="userType" column="user_type"/>
        </association>

    </resultMap>


    <select id="selectProjectFeedbacks" parameterType="map" resultMap="feedbackMap">
        SELECT feedback.*,
               comment.comment_id,
               comment.content comment_content,
               comment.reg_date comment_reg_date,
               comment.admin_delete_date comment_admin_delete_date,
               commentuser.user_id commentuser_id,
               commentuser.name commentuser_name,
               commentuser.profile_image_url commentuser_profile_image_url
          FROM (
                 SELECT feedback.feedback_id,
                        feedback.content,
                        feedback.is_secret,
                        feedback.reg_date,
                        feedback.admin_delete_date,
                        feedbackuser.user_id feedbackuser_id,
                        feedbackuser.name feedbackuser_name,
                        feedbackuser.profile_image_url feedbackuser_profile_image_url,
                        feedbackuser.user_type,
                        feedbackuserinv.inv_sort_cd
                   FROM wi_project_feedback feedback
                          LEFT JOIN wi_user_investor feedbackuserinv ON feedbackuserinv.user_id = feedback.user_id,
                        wi_user feedbackuser
                  WHERE feedback.project_id = #{projectId}
                    AND feedback.delete_date IS NULL
                    AND feedback.user_id = feedbackuser.user_id
                    <choose>
                        <when test="pageable != null">
                            ORDER BY <foreach collection="pageable.sort" item="order" separator=",">${order.property} ${order.direction}</foreach>
                            LIMIT #{pageable.offset}, #{pageable.pageSize}
                        </when>
                        <otherwise>
                            ORDER BY feedback.reg_date DESC
                        </otherwise>
                    </choose> ) feedback LEFT OUTER JOIN wi_feedback_comment comment ON feedback.feedback_id = comment.feedback_id
                                         LEFT OUTER JOIN wi_user commentuser ON comment.user_id = commentuser.user_id
         WHERE comment.delete_date IS NULL
    </select>


    <select id="adminSelectProjectFeedbacks" parameterType="map" resultMap="feedbackMap">
        SELECT feedback.*,
        comment.comment_id,
        comment.content comment_content,
        comment.reg_date comment_reg_date,
        comment.delete_date comment_delete_date,
        comment.admin_delete_date comment_admin_delete_date,
        commentuser.user_id commentuser_id,
        commentuser.name commentuser_name,
        commentuser.profile_image_url commentuser_profile_image_url
        FROM (
        SELECT feedback.feedback_id,
        feedback.content,
        feedback.reg_date,
        feedback.delete_date,
        feedback.admin_delete_date,
        feedbackuser.user_id feedbackuser_id,
        feedbackuser.name feedbackuser_name,
        feedbackuser.profile_image_url feedbackuser_profile_image_url
        FROM wi_project_feedback feedback,
        wi_user feedbackuser
        WHERE feedback.project_id = #{projectId}
        AND feedback.user_id = feedbackuser.user_id
        <choose>
            <when test="pageable != null">
                ORDER BY <foreach collection="pageable.sort" item="order" separator=",">${order.property} ${order.direction}</foreach>
                LIMIT #{pageable.offset}, #{pageable.pageSize}
            </when>
            <otherwise>
                ORDER BY feedback.reg_date DESC
            </otherwise>
        </choose> ) feedback LEFT OUTER JOIN wi_feedback_comment comment ON feedback.feedback_id = comment.feedback_id
        LEFT OUTER JOIN wi_user commentuser ON comment.user_id = commentuser.user_id
        WHERE comment.delete_date IS NULL
        <if test="keyword != null and keyword != ''">AND feedback.content LIKE CONCAT('%', #{keyword}, '%')</if>
    </select>


</mapper>