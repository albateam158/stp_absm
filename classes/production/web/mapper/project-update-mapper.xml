<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xenix.wicrowd.mybatis.mapper.XProjectUpdateMapper">

    <!--========================================== INSERT ============================================== -->

    <!--========================================== UPDATE ============================================== -->

    <!--========================================== DELETE ============================================== -->

    <!--========================================== SELECT ============================================== -->
    <select id="selectProjectUpdatesCount" parameterType="map" resultType="int">
        SELECT COUNT(update_id)
          FROM wi_project_update
         WHERE delete_date IS NULL
    </select>

    <resultMap id="updateMap" type="net.xenix.wicrowd.model.XProjectUpdate">
        <id property="updateId" column="update_id"/>
        <result property="projectId" column="project_id"/>
        <result property="projectUserId" column="project_user_id"/>
        <result property="corpName" column="corp_name"/>
        <result property="logoImageUrl" column="logo_image_url"/>
        <result property="title" column="title"/>
        <result property="commentCount" column="comment_count"/>
        <result property="content" column="content"/>
        <result property="regDate" column="reg_date"/>

        <collection property="comments" resultMap="commentMap" notNullColumn="comment_id"></collection>
    </resultMap>



    <resultMap id="commentMap" type="net.xenix.wicrowd.model.XUpdateComment">

        <id property="commentId" column="comment_id"/>
        <result property="content" column="comment_content"></result>
        <result property="regDate" column="comment_reg_date"/>
        <result property="adminDeleteDate" column="comment_admin_delete_date"/>

        <association property="user" javaType="net.xenix.wicrowd.model.XUser">
            <id property="userId" column="comment_user_id"/>
            <result property="name" column="commentuser_name" typeHandler="net.xenix.wicrowd.mybatis.EncryptStringTypeHandler"></result>
            <result property="profileImageUrl" column="commentuser_profile_image_url"></result>
        </association>

        <collection property="replies" resultMap="replyMap" notNullColumn="reply_comment_id"></collection>

    </resultMap>

    <resultMap id="replyMap" type="net.xenix.wicrowd.model.XUpdateComment">

        <id property="commentId" column="reply_comment_id"/>
        <result property="content" column="reply_content"></result>
        <result property="parentCommentId" column="reply_parent_comment_id"/>
        <result property="regDate" column="reply_reg_date"/>
        <result property="adminDeleteDate" column="reply_admin_delete_date"/>


        <association property="user" javaType="net.xenix.wicrowd.model.XUser">
            <id property="userId" column="reply_user_id"/>
            <result property="name" column="reply_user_name" typeHandler="net.xenix.wicrowd.mybatis.EncryptStringTypeHandler"></result>
            <result property="profileImageUrl" column="reply_profile_image_url"></result>
        </association>

    </resultMap>


    <select id="selectProjectUpdates" parameterType="map" resultMap="updateMap">
        SELECT a.*,
               ccomment.comment_id reply_comment_id,
               ccomment.content reply_content,
               ccomment.user_id reply_user_id,
               ccomment.parent_comment_id reply_parent_comment_id,
               ccomment.reg_date reply_reg_date,
               ccomment.admin_delete_date reply_admin_delete_date,
               cuser.name reply_user_name,
               cuser.profile_image_url reply_profile_image_url
          FROM (
                 SELECT pupdate.*,
                        comment.comment_id,
                        comment.content comment_content,
                        comment.reg_date comment_reg_date,
                        comment.admin_delete_date comment_admin_delete_date,
                        commentuser.user_id comment_user_id,
                        commentuser.name commentuser_name,
                        commentuser.profile_image_url commentuser_profile_image_url
                  FROM (
                        SELECT project.project_id,
                                project.user_id project_user_id,
                                puser.corp_name,
                                puser.logo_image_url,
                                pupdate.update_id,
                                pupdate.title,
                                pupdate.content,
                                pupdate.reg_date
                          FROM wi_project_update pupdate
                            LEFT OUTER JOIN wi_project project ON pupdate.project_id = project.project_id
                            LEFT OUTER JOIN wi_user_publisher puser ON puser.user_id = project.user_id
                         WHERE pupdate.delete_date IS NULL
                                <if test="projectId != null">AND pupdate.project_id = #{projectId}</if>
                        <choose>
                            <when test="pageable != null">
                                ORDER BY <foreach collection="pageable.sort" item="order" separator=",">${order.property} ${order.direction}</foreach>
                                LIMIT #{pageable.offset}, #{pageable.pageSize}
                            </when>
                            <otherwise>
                                ORDER BY pupdate.update_id DESC
                            </otherwise>
                        </choose> ) pupdate
                                    LEFT OUTER JOIN wi_update_comment comment ON pupdate.update_id = comment.update_id AND comment.delete_date IS NULL AND comment.comment_id = comment.parent_comment_id
                                    LEFT OUTER JOIN wi_user commentuser ON comment.user_id = commentuser.user_id
                       ) a
                        LEFT OUTER JOIN wi_update_comment ccomment ON a.comment_id = ccomment.parent_comment_id AND ccomment.comment_id != ccomment.parent_comment_id AND ccomment.delete_date IS NULL
                        LEFT OUTER JOIN wi_user cuser ON ccomment.user_id = cuser.user_id
        ORDER BY update_id DESC, a.comment_id ASC, ccomment.comment_id ASC
    </select>


</mapper>